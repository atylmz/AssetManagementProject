// <auto-generated />
using System;
using AssetManagementAPI.Entity.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssetManagementAPI.Entity.Migrations
{
    [DbContext(typeof(AssetManagementContext))]
    partial class AssetManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Action", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("ActionId");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.ActionStatus", b =>
                {
                    b.Property<int>("ActionStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ActionId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("ActionStatusId");

                    b.HasIndex("ActionId");

                    b.HasIndex("StatusId");

                    b.ToTable("ActionStatus");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("money");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int")
                        .HasColumnName("CurrencyID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<bool?>("Guarantee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("RetireDate")
                        .HasColumnType("date");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("AssetId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ModelId");

                    b.HasIndex("TypeId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetBarcode", b =>
                {
                    b.Property<int>("AssetBarcodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("AssetBarcodeId");

                    b.HasIndex("AssetId");

                    b.ToTable("AssetBarcode");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetCustomer", b =>
                {
                    b.Property<int>("AssetCustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("AssetCustomerId");

                    b.HasIndex("AssetId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AssetCustomer");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetOwner", b =>
                {
                    b.Property<int>("AssetOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerTypeId")
                        .HasColumnType("int");

                    b.HasKey("AssetOwnerId");

                    b.HasIndex("AssetId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("OwnerTypeId");

                    b.ToTable("AssetOwner");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetStatus", b =>
                {
                    b.Property<int>("AssetStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<int?>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("AssetStatusId");

                    b.HasIndex("AssetId");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("StatusId");

                    b.ToTable("AssetStatus");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetWithoutBarcode", b =>
                {
                    b.Property<int>("AssetWithoutBarcodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("AssetWithoutBarcodeId");

                    b.HasIndex("AssetId");

                    b.HasIndex("UnitId");

                    b.ToTable("AssetWithoutBarcode");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("BrandId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("ClaimId");

                    b.ToTable("Claim");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.CommType", b =>
                {
                    b.Property<int>("CommTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("CommTypeId");

                    b.ToTable("CommType");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<int?>("PersonnelId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("AssetId");

                    b.HasIndex("PersonnelId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Communication", b =>
                {
                    b.Property<int>("CommunicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<int?>("PersonnelId")
                        .HasColumnType("int");

                    b.HasKey("CommunicationId");

                    b.HasIndex("CommTypeId");

                    b.HasIndex("PersonnelId");

                    b.ToTable("Communication");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<int?>("SubscriptionNumber")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("PageCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<string>("Path")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.HasKey("DocumentId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true)
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("GroupId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("ModelId");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<int?>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("OwnerId");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("TeamId");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.OwnerType", b =>
                {
                    b.Property<int>("OwnerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("OwnerTypeId");

                    b.ToTable("OwnerType");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Personnel", b =>
                {
                    b.Property<int>("PersonnelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(50)
                        .HasColumnType("varbinary(50)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasMaxLength(50)
                        .HasColumnType("varbinary(50)");

                    b.HasKey("PersonnelId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Personnel");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.PersonnelTeam", b =>
                {
                    b.Property<int>("PersonnelTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<int?>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("PersonnelTeamId");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("TeamId");

                    b.ToTable("PersonnelTeam");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int")
                        .HasColumnName("CurrencyID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("money")
                        .HasColumnName("Price");

                    b.HasKey("PriceId");

                    b.HasIndex("AssetId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.RolePersonnel", b =>
                {
                    b.Property<int>("RolePersonnelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<int?>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RolePersonnelId");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePersonnel");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("MasterId")
                        .HasColumnType("int")
                        .HasColumnName("MasterID");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("TeamId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("TypeId");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Turkish_CI_AS");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("UnitId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.ActionStatus", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Action", "Action")
                        .WithMany("ActionStatuses")
                        .HasForeignKey("ActionId")
                        .HasConstraintName("FK_ActionStatus_Action");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Status", "Status")
                        .WithMany("ActionStatuses")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_ActionStatus_Status");

                    b.Navigation("Action");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Asset", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Brand", "Brand")
                        .WithMany("Assets")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_Asset_Brand");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Company", "Company")
                        .WithMany("Assets")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Asset_Company");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Currency", "Currency")
                        .WithMany("Assets")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Asset_Currency");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Group", "Group")
                        .WithMany("Assets")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Asset_Group");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Model", "Model")
                        .WithMany("Assets")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK_Asset_Model");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Type", "Type")
                        .WithMany("Assets")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Asset_Type");

                    b.Navigation("Brand");

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("Group");

                    b.Navigation("Model");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetBarcode", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Asset", "Asset")
                        .WithMany("AssetBarcodes")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_AssetBarcode_Asset");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetCustomer", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Asset", "Asset")
                        .WithMany("AssetCustomers")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_AssetCustomer_Asset");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Customer", "Customer")
                        .WithMany("AssetCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_AssetCustomer_Customer");

                    b.Navigation("Asset");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetOwner", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Asset", "Asset")
                        .WithMany("AssetOwners")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_AssetOwner_Asset");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Owner", "Owner")
                        .WithMany("AssetOwners")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_AssetOwner_Owner");

                    b.HasOne("AssetManagementAPI.Entity.Entities.OwnerType", "OwnerType")
                        .WithMany("AssetOwners")
                        .HasForeignKey("OwnerTypeId")
                        .HasConstraintName("FK_AssetOwner_OwnerType");

                    b.Navigation("Asset");

                    b.Navigation("Owner");

                    b.Navigation("OwnerType");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetStatus", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Asset", "Asset")
                        .WithMany("AssetStatuses")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_AssetStatus_Asset");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Personnel", "Personnel")
                        .WithMany("AssetStatuses")
                        .HasForeignKey("PersonnelId")
                        .HasConstraintName("FK_AssetStatus_Personnel");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Status", "Status")
                        .WithMany("AssetStatuses")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_AssetStatus_Status");

                    b.Navigation("Asset");

                    b.Navigation("Personnel");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.AssetWithoutBarcode", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Asset", "Asset")
                        .WithMany("AssetWithoutBarcodes")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_AssetWithoutBarcode_Asset");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Unit", "Unit")
                        .WithMany("AssetWithoutBarcodes")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_AssetWithoutBarcode_Unit");

                    b.Navigation("Asset");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Comment", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Asset", "Asset")
                        .WithMany("Comments")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Comment_Asset");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Personnel", "Personnel")
                        .WithMany("Comments")
                        .HasForeignKey("PersonnelId")
                        .HasConstraintName("FK_Comment_Personnel");

                    b.Navigation("Asset");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Communication", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.CommType", "CommType")
                        .WithMany("Communications")
                        .HasForeignKey("CommTypeId")
                        .HasConstraintName("FK_Communication_CommType");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Personnel", "Personnel")
                        .WithMany("Communications")
                        .HasForeignKey("PersonnelId")
                        .HasConstraintName("FK_Communication_Personnel");

                    b.Navigation("CommType");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Owner", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Personnel", "Personnel")
                        .WithMany("Owners")
                        .HasForeignKey("PersonnelId")
                        .HasConstraintName("FK_Owner_Personnel");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Team", "Team")
                        .WithMany("Owners")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_Owner_Team");

                    b.Navigation("Personnel");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Personnel", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Company", "Company")
                        .WithMany("Personnel")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Personnel_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.PersonnelTeam", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Personnel", "Personnel")
                        .WithMany("PersonnelTeams")
                        .HasForeignKey("PersonnelId")
                        .HasConstraintName("FK_PersonnelTeam_Personnel");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Team", "Team")
                        .WithMany("PersonnelTeams")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_PersonnelTeam_Team");

                    b.Navigation("Personnel");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Price", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Asset", "Asset")
                        .WithMany("Prices")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Price_Asset");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Currency", "Currency")
                        .WithMany("Prices")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Price_Currency");

                    b.Navigation("Asset");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.RolePersonnel", b =>
                {
                    b.HasOne("AssetManagementAPI.Entity.Entities.Personnel", "Personnel")
                        .WithMany("RolePersonnel")
                        .HasForeignKey("PersonnelId")
                        .HasConstraintName("FK_RolePersonnel_Personnel");

                    b.HasOne("AssetManagementAPI.Entity.Entities.Role", "Role")
                        .WithMany("RolePersonnel")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RolePersonnel_Role");

                    b.Navigation("Personnel");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Action", b =>
                {
                    b.Navigation("ActionStatuses");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Asset", b =>
                {
                    b.Navigation("AssetBarcodes");

                    b.Navigation("AssetCustomers");

                    b.Navigation("AssetOwners");

                    b.Navigation("AssetStatuses");

                    b.Navigation("AssetWithoutBarcodes");

                    b.Navigation("Comments");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Brand", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.CommType", b =>
                {
                    b.Navigation("Communications");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Company", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Currency", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Customer", b =>
                {
                    b.Navigation("AssetCustomers");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Group", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Model", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Owner", b =>
                {
                    b.Navigation("AssetOwners");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.OwnerType", b =>
                {
                    b.Navigation("AssetOwners");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Personnel", b =>
                {
                    b.Navigation("AssetStatuses");

                    b.Navigation("Comments");

                    b.Navigation("Communications");

                    b.Navigation("Owners");

                    b.Navigation("PersonnelTeams");

                    b.Navigation("RolePersonnel");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Role", b =>
                {
                    b.Navigation("RolePersonnel");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Status", b =>
                {
                    b.Navigation("ActionStatuses");

                    b.Navigation("AssetStatuses");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Team", b =>
                {
                    b.Navigation("Owners");

                    b.Navigation("PersonnelTeams");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Type", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetManagementAPI.Entity.Entities.Unit", b =>
                {
                    b.Navigation("AssetWithoutBarcodes");
                });
#pragma warning restore 612, 618
        }
    }
}
